version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: manadabook_postgres
    environment:
      POSTGRES_DB: manadabook
      POSTGRES_USER: manadabook_user
      POSTGRES_PASSWORD: manadabook_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    networks:
      - manadabook_network

  # Cache y sesiones Redis
  redis:
    image: redis:7-alpine
    container_name: manadabook_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - manadabook_network

  # Almacenamiento de archivos MinIO (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: manadabook_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - manadabook_network

  # Backend API (NestJS)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: manadabook_backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://manadabook_user:manadabook_password@postgres:5432/manadabook
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - manadabook_network

  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: manadabook_frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - NEXT_PUBLIC_WS_URL=ws://localhost:3001
      - NEXT_PUBLIC_MINIO_ENDPOINT=http://localhost:9000
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - manadabook_network

  # Worker para procesamiento de videos (FFmpeg)
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    container_name: manadabook_worker
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://manadabook_user:manadabook_password@postgres:5432/manadabook
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - manadabook_network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  manadabook_network:
    driver: bridge
